name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.9]

    
    env:
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USERNAME }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TEST_ENV: True

    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
    #       POSTGRES_USER: ${{ secrets.POSTGRES_USERNAME }}
    #       POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    #       DATABASE_URL: ${{ secrets.DATABASE_URL }}
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version}}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure environment variables
      run: |
        echo "DATABASE_URL=${DATABASE_URL}" >> .env
        echo "POSTGRES_DB=${POSTGRES_DB}" >> .env
        echo "POSTGRES_USER=${POSTGRES_USER}" >> .env
        echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> .env
        echo "TEST_ENV=True" >> .env

    - name: Run app
      run: |
        python main.py
    
    - name: Tests
      run: |
        python -m pytest