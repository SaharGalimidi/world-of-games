# services:
#   web:
#     build: .
#     ports:
#       - "8777:8777"
#     volumes:
#       - ./Scores.txt:/Scores.txt  # Mounting the Scores.txt file
#     env_file:
#       - .env

#   jenkins:
#     image: jenkins/jenkins:lts
#     user: root  # Start as root to install packages in pipeline
#     ports:
#       - "8080:8080"
#       - "50000:50000"
#       - "8777:8777"
#     working_dir: /usr/src/app
#     volumes:
#       - jenkins_home:/var/jenkins_home
#       - .:/usr/src/app
#     command: >
#       /bin/bash -c "
#        apt-get update &&
#        apt-get install -y python3 python3-pip &&
#        java -jar /usr/share/jenkins/jenkins.war
#        "
#     env_file:
#       - .env

# volumes:
#   jenkins_home:



version: '3.8'

networks:
  wog-network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    ports:
      - "8777:8777"
    volumes:
      - ./Scores.txt:/Scores.txt  # Mounting the Scores.txt file
    env_file:
      - .env
    networks:
      - wog-network
    environment:
      - PORT=8777

  jenkins:
    image: jenkins/jenkins:lts
    user: root  # Start as root to install packages in pipeline
    ports:
      - "8080:8080"
      - "50000:50000"
    working_dir: /usr/src/app
    volumes:
      - jenkins_home:/var/jenkins_home
      - .:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock  # Enable Jenkins to communicate with Docker
    command: >
      /bin/bash -c "
       apt-get update &&
       curl -fsSL https://get.docker.com | sh &&
       java -jar /usr/share/jenkins/jenkins.war
       "
    env_file:
      - .env
    networks:
      - wog-network

volumes:
  jenkins_home:
