# services:
#   web:
#     build: .
#     ports:
#       - "8777:8777"
#     volumes:
#       - ./Scores.txt:/Scores.txt  # Mounting the Scores.txt file
#     env_file:
#       - .env

#   jenkins:
#     image: jenkins/jenkins:lts
#     user: root  # Start as root to install packages in pipeline
#     ports:
#       - "8080:8080"
#       - "50000:50000"
#       - "8777:8777"
#     working_dir: /usr/src/app
#     volumes:
#       - jenkins_home:/var/jenkins_home
#       - .:/usr/src/app
#     command: >
#       /bin/bash -c "
#        apt-get update &&
#        apt-get install -y python3 python3-pip &&
#        java -jar /usr/share/jenkins/jenkins.war
#        "
#     env_file:
#       - .env

# volumes:
#   jenkins_home:


networks:
  wog-network:
    driver: bridge

services:
  web:
    build:
      context: .
      dockerfile: app/Dockerfile
    container_name: flask-app
    ports:
      - "8777:8777"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - wog-network
    environment:
      - PORT=8777

  # jenkins:
  #   image: jenkins/jenkins:lts
  #   user: root  # Start as root to install packages in pipeline
  #   ports:
  #     - "8080:8080"
  #     - "50000:50000"
  #   working_dir: /usr/src/app
  #   volumes:
  #     - jenkins_home:/var/jenkins_home
  #     - .:/usr/src/app
  #     - /var/run/docker.sock:/var/run/docker.sock  # Enable Jenkins to communicate with Docker
  #   command: >
  #     /bin/bash -c "
  #      apt-get update &&
  #      curl -fsSL https://get.docker.com | sh &&
  #      java -jar /usr/share/jenkins/jenkins.war
  #      "
  #   env_file:
  #     - .env
  #   networks:
  #     - wog-network

  postgres:
    build:
      context: .
      dockerfile: libs/postgres/Dockerfile
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d wog-db"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - wog-network
    env_file:
      - .env


volumes:
  #jenkins_home:
  postgres_data:
